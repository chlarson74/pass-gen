{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red194\green126\blue101;\red0\green0\blue0;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c80784\c56863\c47059;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;
}
\margl1440\margr1440\vieww17980\viewh14940\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 PsuedoCode for the homework\
\
\
\
\strike \strikec0 // create the GitHub Directory with the starting code\
// assess what is in the folder \'97 \
// index.html \'97 be sure file at the root\
// README file\strike0\striked0 \
\
PHASE ONE -CREATING VARIABLES / GETTING INFORMATION\
\strike \strikec0 // open the script js file\strike0\striked0 \
// comment what you do know into the the document before you begin to code\
// Functions are just sets of instructions until executed\
// what do we need to do?\
// what values do we need to track?\
// must prompt user for length \'97 what if the user does something dumb - edge cases\
// confirm user for upper/lowercase characters? yes/no\
// confirm user if they like to use special characters\
// confirm user if they lik to use numbers - yes or now for confirm\
// create a pool of available characters \'97 array? lowercase/uppercase/special\
// based on their answers, a new pools of create the avaialbe pool of characters\
\
\
PHASE TWO - BUILDING THE PASSWORD\
\
// assume: arrays for all the characters\
// use concat to combine arrays\
// variables with an array of the alphabet, spec characters, math.function\
// random.index \'97 look it iup \'97 how to generate one random number \
// length. ??? see the paper rock scissors js solved to see how r p s were generated\
// create a
\f1\b  password
\f0\b0  variable that is an empty string \'97 like wins = zero\
// loop - create a for loop runs 
\f1\b length
\f0\b0  number of times\
// uppend this character to our password \'97 this is the meat of the homework - multple steps\
// generating a random number between 0 and length of our available pool characters array\
// select one element from availableChars \'97 \
// array name at index random\
	newChar = availableChars[randomNum]\
// after the element is selected append it to the password\
// building the password character by character - run to the specific length the user selected\
// return the password that is created\
\
\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"\cf4 \cb1 \strokec4 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
start the array as empty\
\
var availablechas = [ ] }